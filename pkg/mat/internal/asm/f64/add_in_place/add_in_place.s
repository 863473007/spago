// Code generated by command: go run asm.go -out add_in_place.s -stubs stub.go. DO NOT EDIT.

#include "textflag.h"

// func AddInPlace(x []float64, y []float64)
// Requires: AVX, SSE2
TEXT Â·AddInPlace(SB), NOSPLIT, $0-48
	MOVQ x_base+0(FP), AX
	MOVQ y_base+24(FP), CX
	MOVQ y_len+32(FP), DX

block_loop:
	CMPQ    DX, $0x10
	JL      tail_loop
	VMOVUPD (AX), Y0
	VMOVUPD 32(AX), Y2
	VMOVUPD 64(AX), Y4
	VMOVUPD 96(AX), Y6
	VMOVUPD (CX), Y1
	VMOVUPD 32(CX), Y3
	VMOVUPD 64(CX), Y5
	VMOVUPD 96(CX), Y7
	VADDPD  Y1, Y0, Y1
	VADDPD  Y3, Y2, Y3
	VADDPD  Y5, Y4, Y5
	VADDPD  Y7, Y6, Y7
	VMOVUPD Y1, (CX)
	VMOVUPD Y3, 32(CX)
	VMOVUPD Y5, 64(CX)
	VMOVUPD Y7, 96(CX)
	ADDQ    $0x80, AX
	ADDQ    $0x80, CX
	SUBQ    $0x10, DX
	JMP     block_loop

tail_loop:
	CMPQ  DX, $0x00
	JE    ret
	MOVSD (AX), X0
	MOVSD (CX), X1
	ADDSD X0, X1
	MOVSD X1, (CX)
	ADDQ  $0x08, AX
	ADDQ  $0x08, CX
	DECQ  DX
	JMP   tail_loop

ret:
	RET
